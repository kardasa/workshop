apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: keycloak-sso
  annotations:
    openshift.io/display-name: Keycloak Application
    description: The Keycloak application provides an SSO services
objects:

- apiVersion: v1
  data:
    DB_ADDR: mariadb
    DB_VENDOR: mariadb
    JGROUPS_DISCOVERY_PROPERTIES: dns_query=keycloak-jgroups.${NAMESPACE}.svc.cluster.local
    JGROUPS_DISCOVERY_PROTOCOL: dns.DNS_PING
  kind: ConfigMap
  metadata:
    name: keycloak-config

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      io.kompose.service: mysql-data
    name: mysql-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    storageClassName: ocs-storagecluster-cephfs

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      io.kompose.service: keycloak
    name: keycloak
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        io.kompose.service: keycloak
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        labels:
          io.kompose.service: keycloak
      spec:
        containers:
        - env:
          - name: DB_ADDR
            valueFrom:
              configMapKeyRef:
                key: DB_ADDR
                name: keycloak-config
          - name: DB_DATABASE
            valueFrom:
              secretKeyRef:
                key: DATABASE
                name: mariadb-data
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: PASSWORD
                name: mariadb-data
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                key: USER
                name: mariadb-data
          - name: DB_VENDOR
            valueFrom:
              configMapKeyRef:
                key: DB_VENDOR
                name: keycloak-config
          - name: JGROUPS_DISCOVERY_PROTOCOL
            valueFrom:
              configMapKeyRef:
                key: JGROUPS_DISCOVERY_PROTOCOL
                name: keycloak-config
          - name: KEYCLOAK_PASSWORD
            valueFrom:
              secretKeyRef:
                key: PASSWORD
                name: keycloak-data
          - name: KEYCLOAK_USER
            valueFrom:
              secretKeyRef:
                key: USER
                name: keycloak-data
          - name: JGROUPS_DISCOVERY_PROPERTIES
            valueFrom:
              configMapKeyRef:
                key: JGROUPS_DISCOVERY_PROPERTIES
                name: keycloak-config
          image: quay.io/keycloak/keycloak:15.1.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /auth
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: keycloak
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /auth
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      io.kompose.service: mariadb
    name: mariadb
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        io.kompose.service: mariadb
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          io.kompose.service: mariadb
      spec:
        containers:
        - env:
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: DATABASE
                name: mariadb-data
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: PASSWORD
                name: mariadb-data
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: ROOT_PASSWORD
                name: mariadb-data
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: USER
                name: mariadb-data
          image: docker.io/mariadb:10.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - mysqladmin
              - ping
              - --silent
            failureThreshold: 3
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: mariadb
          ports:
          - containerPort: 3306
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: keycloak
    name: keycloak
  spec:
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "8080"
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: "8443"
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      io.kompose.service: keycloak
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: keycloak
    name: keycloak-jgroups
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "8080"
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      io.kompose.service: keycloak
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: mariadb
    name: mariadb
  spec:
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "3306"
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      io.kompose.service: mariadb
    sessionAffinity: None
    type: ClusterIP

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      io.kompose.service: keycloak
    name: keycloak
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: keycloak
      weight: 100
    wildcardPolicy: None

parameters:
- name: NAMESPACE
  displayName: A namespace needed to proper cluster discovery
  description: A namespace needed to proper cluster discovery
  required: true